LoadModule rewrite_module modules/mod_rewrite.so
LoadModule allowmethods_module modules/mod_allowmethods.so

Listen {{ oe.httpd.host|default('0.0.0.0') }}:{{ oe.httpd.port|default('80') }}

{% if oe.httpd.ssl.port is defined %}
Listen {{ oe.httpd.host|default('0.0.0.0') }}:{{ oe.httpd.ssl.port|default('443') }} https
{% endif %}

## Security Options
# Strong HTTP Protocol
HTTPProtocolOptions Strict
Protocols http/1.1
# Don't Reveal Server
ServerSignature off
ServerTokens Prod
Header unset Server
# No ETag
FileETag None
Header unset ETag
# Set HSTS and X-XSS protection
Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
Header set X-XSS-Protection "1; mode=block"
# Narrow document root
DocumentRoot /var/www/localhost/htdocs/openemr
ErrorLog ${APACHE_LOG_DIR}/error.log
CustomLog ${APACHE_LOG_DIR}/access.log combined

<Directory /var/www/localhost/htdocs/openemr>
    # Only allow these HTTP Methods
    AllowMethods GET POST PUT DELETE HEAD OPTIONS
    # No indexes anywhere
    Options -Indexes
    AllowOverride FileInfo
    Require all granted
</Directory>

<Directory "/var/www/localhost/htdocs/openemr/sites">
    AllowOverride None
</Directory>

<Directory "/var/www/localhost/htdocs/openemr/sites/*/documents">
    Require all denied
</Directory>

#######################################
### Uncomment the following 3 lines ###
### with #'s below to enable HTTPS  ###
### redirection & require HTTPS only ##
#######################################
<VirtualHost *:{{ oe.httpd.port|default('80') }}>
    {% if oe.httpd.ssl.default|default('false')|boolean %}
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule (.*) https://%{HTTP_HOST}:%{HTTP_PORT}/$1 [R,L]
    {% endif %}

    {% if redis.server is defined %}
    php_value session.save_handler = redis
    php_value session.save_path = tcp://{{ redis.server }}:{{ redis.port|default('6379') }}
    {% endif %}
</VirtualHost>

{% if oe.httpd.ssl.port is defined %}
LoadModule ssl_module modules/mod_ssl.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so

SSLRandomSeed startup file:/dev/urandom 512
SSLRandomSeed connect builtin

SSLHonorCipherOrder on

SSLSessionCache        "shmcb:/var/cache/mod_ssl/scache(512000)"
SSLSessionCacheTimeout  300

<VirtualHost _default_:{{ oe.httpd.ssl.port|default('443') }}>
    #   SSL Engine Switch:
    #   Enable/Disable SSL for this virtual host.
    SSLEngine on
    SSLHonorCipherOrder on
    #   Used following tool to produce below ciphers: https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=apache-2.4.39&openssl=1.1.1&hsts=yes&profile=modern
    SSLCipherSuite {{ oe.httpd.ssl.ciphers|default('ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256') }}
    SSLProtocol {{ oe.httpd.ssl.protocol|default('-ALL +TLSv1.2') }}
    SSLCertificateFile    /etc/ssl/certs/webserver.cert.pem
    SSLCertificateKeyFile /etc/ssl/private/webserver.key.pem

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory "/var/www/localhost/cgi-bin">
        SSLOptions +StdEnvVars
    </Directory>

    BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0

    {% if redis.server is defined %}
    php_value session.save_handler = redis
    php_value session.save_path = tcp://{{ redis.server }}:{{ redis.port|default('6379') }}
    {% endif %}
</VirtualHost>
{% endif %}
